/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.celylog.curam.model.entities;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;

/**
 *
 * @author xavalex
 */
@Entity
@Table(name = "profil")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "Profil.findAll", query = "SELECT p FROM Profil p"),
    @NamedQuery(name = "Profil.findById", query = "SELECT p FROM Profil p WHERE p.id = :id"),
    @NamedQuery(name = "Profil.findByNom", query = "SELECT p FROM Profil p WHERE p.nom = :nom"),
    @NamedQuery(name = "Profil.findByActive", query = "SELECT p FROM Profil p WHERE p.active = :active"),
    @NamedQuery(name = "Profil.findByVersion", query = "SELECT p FROM Profil p WHERE p.version = :version"),
    @NamedQuery(name = "Profil.findBySignature", query = "SELECT p FROM Profil p WHERE p.signature = :signature"),
    @NamedQuery(name = "Profil.findByDateActivation", query = "SELECT p FROM Profil p WHERE p.dateActivation = :dateActivation"),
    @NamedQuery(name = "Profil.findByDateFermeture", query = "SELECT p FROM Profil p WHERE p.dateFermeture = :dateFermeture"),
    @NamedQuery(name = "Profil.findByDateModification", query = "SELECT p FROM Profil p WHERE p.dateModification = :dateModification"),
    @NamedQuery(name = "Profil.findByDateCreation", query = "SELECT p FROM Profil p WHERE p.dateCreation = :dateCreation")})
public class Profil implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @NotNull
    @Column(name = "id")
    @GeneratedValue(strategy=GenerationType.AUTO)
    private Integer id;
    @Size(max = 254)
    @Column(name = "nom")
    private String nom;
    @Column(name = "est_employe")
    private boolean employe = true;
    @Column(name = "active")
    private Integer active;
    @Column(name = "version")
    private Integer version;
    @Size(max = 100)
    @Column(name = "signature")
    private String signature;
    @Column(name = "date_activation")
    @Temporal(TemporalType.TIMESTAMP)
    private Date dateActivation;
    @Column(name = "date_fermeture")
    @Temporal(TemporalType.TIMESTAMP)
    private Date dateFermeture;
    @Column(name = "date_modification")
    @Temporal(TemporalType.TIMESTAMP)
    private Date dateModification;
    @Column(name = "date_creation")
    @Temporal(TemporalType.TIMESTAMP)
    private Date dateCreation;
    
    
    @ManyToMany(cascade = {CascadeType.DETACH, CascadeType.PERSIST, CascadeType.REFRESH, CascadeType.MERGE})
    @JoinTable(name = "profilutilisateur", joinColumns = {
        @JoinColumn(name = "id_profil")}, inverseJoinColumns = {
        @JoinColumn(name = "id_utilisateur")})
    private Set<Utilisateur> utilisateurs = new HashSet<Utilisateur>(0);
    
    @ManyToMany(cascade= CascadeType.DETACH)
    @JoinTable(name="droitprofil", joinColumns = {@JoinColumn (name="id_profil")}, inverseJoinColumns ={ @JoinColumn (name="id_menu")})
    private Set<Menus> menus = new HashSet<Menus>(0);
    
    @OneToMany(fetch = FetchType.EAGER, cascade = {CascadeType.ALL})
    @JoinColumn (name="id_profil")
    private List<DroitProfil> droits = new ArrayList<DroitProfil>(0);

    public Profil() {
    }

    public Profil(Integer id) {
        this.id = id;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getNom() {
        return nom;
    }

    public void setNom(String nom) {
        this.nom = nom;
    }

    public boolean isEmploye() {
        return employe;
    }

    public void setEmploye(boolean employe) {
        this.employe = employe;
    }
       
    public Integer getActive() {
        return active;
    }

    public void setActive(Integer active) {
        this.active = active;
    }

    public Integer getVersion() {
        return version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    public String getSignature() {
        return signature;
    }

    public void setSignature(String signature) {
        this.signature = signature;
    }

    public Date getDateActivation() {
        return dateActivation;
    }

    public void setDateActivation(Date dateActivation) {
        this.dateActivation = dateActivation;
    }

    public Date getDateFermeture() {
        return dateFermeture;
    }

    public void setDateFermeture(Date dateFermeture) {
        this.dateFermeture = dateFermeture;
    }

    public Date getDateModification() {
        return dateModification;
    }

    public void setDateModification(Date dateModification) {
        this.dateModification = dateModification;
    }

    public Date getDateCreation() {
        return dateCreation;
    }

    public void setDateCreation(Date dateCreation) {
        this.dateCreation = dateCreation;
    }

    public Set<Utilisateur> getUtilisateurs() {
        return utilisateurs;
    }

    public void setUtilisateurs(Set<Utilisateur> utilisateurs) {
        this.utilisateurs = utilisateurs;
    }

    public Set<Menus> getMenus() {
        return menus;
    }

    public void setMenus(Set<Menus> menus) {
        this.menus = menus;
    }

    public List<DroitProfil> getDroits() {
        return droits;
    }

    public void setDroits(List<DroitProfil> droits) {
        this.droits = droits;
    }

    
        
    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Profil)) {
            return false;
        }
        Profil other = (Profil) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.celylog.curam.model.entities.Profil[ id=" + id + " ]";
    }
    
    
}
