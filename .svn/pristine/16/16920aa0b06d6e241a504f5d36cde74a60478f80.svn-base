package com.celylog.curam.web.controller;

import com.celylog.curam.model.entities.DroitProfil;
import com.celylog.curam.model.entities.Menus;
import com.celylog.curam.model.entities.Profil;
import com.celylog.curam.model.entities.Requete;
import com.celylog.curam.model.entities.Utilisateur;
import javax.servlet.http.HttpServletRequest;
import com.celylog.curam.service.DefaultService;
import com.celylog.curam.service.security.FormService;
import com.celylog.curam.service.security.RequeteService;
import com.celylog.curam.service.security.UserService;
import com.celylog.curam.utils.BasicFonctions;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

/**
 *
 * @author Sergeo T
 */
@Controller
@RequestMapping({"/requetes"})
public class RequeteController {
    @Autowired
    UserService userservice;
    @Autowired
    FormService formService;
    @Autowired
    DefaultService dao;
    @Autowired
    RequeteService requeteservice;

    @RequestMapping(method = RequestMethod.GET)
    public String homchooseprofile(HttpServletRequest request, HttpSession session, Model uiModel) {
        userservice.setAdminProfilSubMenu(request, session);
        Utilisateur user = userservice.getCurentUser(session);
        Profil p = userservice.getCurentUserProfil(session);
        List<Requete> requetes;
        
        if(p.isEmploye()){
            requetes = requeteservice.getAllRembourssementDestinataire(user.getId());
        }else{
            requetes = requeteservice.getAllRembourssementUser(user.getId());
        }
        uiModel.addAttribute("requetes", requetes);
        return "rembourssements";
    }

    @RequestMapping(params ="" , method = RequestMethod.POST)
    public String chooseprofile(@RequestParam(value = "profil", required = false) int idProfil,
            Model m,HttpServletRequest request, HttpSession session) {
        userservice.setUserProfilSessionMenus(userservice.getCurentUser(session), idProfil, session);
        return "redirect:/home";
    }
}
