/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.celylog.curam.model.entities;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;

/**
 *
 * @author xavalex
 */
@Entity
@Table(name = "proprietaire")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "Proprietaire.findAll", query = "SELECT p FROM Proprietaire p"),
    @NamedQuery(name = "Proprietaire.findById", query = "SELECT p FROM Proprietaire p WHERE p.id = :id"),
    @NamedQuery(name = "Proprietaire.findByRaisonsociale", query = "SELECT p FROM Proprietaire p WHERE p.raisonsociale = :raisonsociale"),
    @NamedQuery(name = "Proprietaire.findByType", query = "SELECT p FROM Proprietaire p WHERE p.type = :type"),
    @NamedQuery(name = "Proprietaire.findBySeuilpriseencharge", query = "SELECT p FROM Proprietaire p WHERE p.seuilpriseencharge = :seuilpriseencharge"),
    @NamedQuery(name = "Proprietaire.findByActive", query = "SELECT p FROM Proprietaire p WHERE p.active = :active"),
    @NamedQuery(name = "Proprietaire.findByVersion", query = "SELECT p FROM Proprietaire p WHERE p.version = :version"),
    @NamedQuery(name = "Proprietaire.findBySignature", query = "SELECT p FROM Proprietaire p WHERE p.signature = :signature"),
    @NamedQuery(name = "Proprietaire.findByDateActivation", query = "SELECT p FROM Proprietaire p WHERE p.dateActivation = :dateActivation"),
    @NamedQuery(name = "Proprietaire.findByDateFermeture", query = "SELECT p FROM Proprietaire p WHERE p.dateFermeture = :dateFermeture"),
    @NamedQuery(name = "Proprietaire.findByDateModification", query = "SELECT p FROM Proprietaire p WHERE p.dateModification = :dateModification"),
    @NamedQuery(name = "Proprietaire.findByDateCreation", query = "SELECT p FROM Proprietaire p WHERE p.dateCreation = :dateCreation")})
public class Proprietaire implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @NotNull
    @Column(name = "id")
    @GeneratedValue(strategy=GenerationType.AUTO)
    private Integer id;
    @Size(max = 254)
    @Column(name = "raisonsociale")
    private String raisonsociale;
    @Column(name = "type")
    private Integer type;
    // @Max(value=?)  @Min(value=?)//if you know range of your decimal fields consider using these annotations to enforce field validation
    @Column(name = "seuilpriseencharge")
    private Double seuilpriseencharge;
    @Column(name = "pays")
    private String pays;
    @Column(name = "ville")
    private String ville;
    @Column(name = "email")
    private String email;
    @Column(name = "phone")
    private String phone;
    @Column(name = "bp")
    private String bp;
    @Column(name = "Quartier")
    private String quartier;
    @Column(name = "active")
    private Integer active;
    @Column(name = "version")
    private Integer version;
    @Size(max = 100)
    @Column(name = "signature")
    private String signature;
    @Column(name = "date_activation")
    @Temporal(TemporalType.TIMESTAMP)
    private Date dateActivation;
    @Column(name = "date_fermeture")
    @Temporal(TemporalType.TIMESTAMP)
    private Date dateFermeture;
    @Column(name = "date_modification")
    @Temporal(TemporalType.TIMESTAMP)
    private Date dateModification;
    @Column(name = "date_creation")
    @Temporal(TemporalType.TIMESTAMP)
    private Date dateCreation;
    
    @OneToMany(fetch = FetchType.EAGER, cascade = {CascadeType.DETACH, CascadeType.PERSIST, CascadeType.MERGE})
    @JoinTable(name="gestionnaire", joinColumns = {@JoinColumn (name="id_proprietaire")}, inverseJoinColumns ={ @JoinColumn (name="id_utilisateur")})
    private List<Utilisateur> gestionnaires = new ArrayList<Utilisateur>(0);

    public Proprietaire() {
    }

    public Proprietaire(int type) {
        this.type = type;
    }
    
    public static Proprietaire getAssurance(){
        return new Proprietaire(TypeProprietaire.ASSURANCE);
    }
    
    public static Proprietaire getMutuelle(){
        return new Proprietaire(TypeProprietaire.MUTUELLE);
    }

    public Proprietaire(Integer id) {
        this.id = id;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getRaisonsociale() {
        return raisonsociale;
    }

    public void setRaisonsociale(String raisonsociale) {
        this.raisonsociale = raisonsociale;
    }

    public Integer getType() {
        return type;
    }

    public void setType(Integer type) {
        this.type = type;
    }

    public Double getSeuilpriseencharge() {
        return seuilpriseencharge;
    }

    public void setSeuilpriseencharge(Double seuilpriseencharge) {
        this.seuilpriseencharge = seuilpriseencharge;
    }

    public Integer getActive() {
        return active;
    }

    public void setActive(Integer active) {
        this.active = active;
    }

    public Integer getVersion() {
        return version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    public String getSignature() {
        return signature;
    }

    public void setSignature(String signature) {
        this.signature = signature;
    }

    public Date getDateActivation() {
        return dateActivation;
    }

    public void setDateActivation(Date dateActivation) {
        this.dateActivation = dateActivation;
    }

    public Date getDateFermeture() {
        return dateFermeture;
    }

    public void setDateFermeture(Date dateFermeture) {
        this.dateFermeture = dateFermeture;
    }

    public Date getDateModification() {
        return dateModification;
    }

    public void setDateModification(Date dateModification) {
        this.dateModification = dateModification;
    }

    public Date getDateCreation() {
        return dateCreation;
    }

    public void setDateCreation(Date dateCreation) {
        this.dateCreation = dateCreation;
    }

    public String getPays() {
        return pays;
    }

    public void setPays(String pays) {
        this.pays = pays;
    }

    public String getVille() {
        return ville;
    }

    public void setVille(String ville) {
        this.ville = ville;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public String getBp() {
        return bp;
    }

    public void setBp(String bp) {
        this.bp = bp;
    }

    public String getQuartier() {
        return quartier;
    }

    public void setQuartier(String quartier) {
        this.quartier = quartier;
    }

    public List<Utilisateur> getGestionnaires() {
        return gestionnaires;
    }

    public void setGestionnaires(List<Utilisateur> gestionnaires) {
        this.gestionnaires = gestionnaires;
    }

    
    
    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Proprietaire)) {
            return false;
        }
        Proprietaire other = (Proprietaire) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.celylog.curam.model.entities.Proprietaire[ id=" + id + " ]";
    }
    
}
